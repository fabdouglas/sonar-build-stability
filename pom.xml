<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.codehaus.sonar-plugins</groupId>
		<artifactId>parent</artifactId>
		<version>19</version>
	</parent>

	<artifactId>sonar-build-stability-plugin</artifactId>
	<version>1.4.0-FDA</version>
	<packaging>sonar-plugin</packaging>

	<name>Sonar Build Stability Plugin</name>
	<description>Generates reports based on information about builds from Continuous Integration System.</description>
	<url>http://redirect.sonarsource.com/plugins/buildstability.html</url>
	<inceptionYear>2010</inceptionYear>
	<organization>
		<name>SonarSource</name>
		<url>http://www.sonarsource.com</url>
	</organization>
	<licenses>
		<license>
			<name>GNU LGPL 3</name>
			<url>http://www.gnu.org/licenses/lgpl.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>godin</id>
			<name>Evgeny Mandrikov</name>
			<timezone>+3</timezone>
		</developer>
		<developer>
			<id>henryju</id>
			<name>Julien Henry</name>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>fabdouglas</id>
			<name>Fabrice Daugan</name>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git@github.com:SonarCommunity/sonar-build-stability.git</connection>
		<developerConnection>scm:git:git@github.com:SonarCommunity/sonar-build-stability.git</developerConnection>
		<url>https://github.com/SonarCommunity/sonar-build-stability</url>
		<tag>HEAD</tag>
	</scm>
	
	<issueManagement>
		<system>JIRA</system>
		<url>http://jira.codehaus.org/browse/SONARPLUGINS/component/14312</url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>${JENKINS_URL}/job/${JOB_NAME}/</url>
	</ciManagement>

	<properties>
		<sonar.pluginName>Build Stability</sonar.pluginName>
		<sonar.pluginClass>org.sonar.plugins.buildstability.BuildStabilityPlugin</sonar.pluginClass>
		<sonar.version>4.5.4</sonar.version>
		<plugin.antrun>1.8</plugin.antrun>                    <!-- http://maven.apache.org/plugins/maven-antrun-plugin/project-summary.html -->
		<plugin.surefire>2.18.1</plugin.surefire>
		<plugin.jacoco>0.7.5.201505241946</plugin.jacoco>
		<plugin.jacoco.ut.destFile>${workspace}/jacoco-ut.exec</plugin.jacoco.ut.destFile>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.java.coveragePlugin>${sonar.core.codeCoveragePlugin}</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${plugin.jacoco.ut.destFile}</sonar.jacoco.reportPath>
		<maven.ut.argLine.memory>-XX:MaxPermSize=256m -Xms800m -Xmx800m</maven.ut.argLine.memory>
		<maven.ut.argLine>${maven.ut.argLine.memory}</maven.ut.argLine>
		<maven.ut.reuseForks>true</maven.ut.reuseForks>
		<jacoco-listeners.version>3.4.0-FDA</jacoco-listeners.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-plugin-api</artifactId>
			<version>${sonar.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-deprecated</artifactId>
			<version>${sonar.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.0.9</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.3</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
				<exclusion>
					<groupId>commons-codec</groupId>
					<artifactId>commons-codec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- unit tests -->
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-plugin-api</artifactId>
			<version>${sonar.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.sonar</groupId>
			<artifactId>sonar-testing-harness</artifactId>
			<version>${sonar.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.25</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>${jacoco-listeners.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.agent</artifactId>
			<version>${plugin.jacoco}</version>
			<classifier>runtime</classifier>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>coverage-per-test</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${plugin.jacoco}</version>
							<executions>
								<execution>
									<id>agent-unit</id>
									<phase>process-test-classes</phase>
									<goals>
										<goal>prepare-agent</goal>
									</goals>
									<configuration>
										<output>file</output>
										<append>true</append>
										<propertyName>plugin.jacoco.ut.argLine</propertyName>
										<destFile>${plugin.jacoco.ut.destFile}</destFile>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${plugin.surefire}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${plugin.antrun}</version>
						<executions>
							<execution>
								<id>clean-jacoco-final</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="Clean Jacoco final data" unless="jacoco.started">
										<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" />
										<echo message="Jacoco is now marked as started, file is : ${plugin.jacoco.ut.destFile}, sonar expects : ${sonar.jacoco.reportPath}" />
										<delete file="${plugin.jacoco.ut.destFile}" quiet="true" />
										<delete file="${plugin.jacoco.it.destFile}" quiet="true" />
										<groovy>
											System.setProperty("jacoco.started","yes")
										</groovy>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>clean-jacoco-target</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="Clean Jacoco target data">
										<delete file="${project.build.directory}/jacoco-it.exec" quiet="true" />
										<delete file="${project.build.directory}/jacoco-ut.exec" quiet="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>merge-jacoco-ut</id>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target if="plugin.jacoco.ut.destFile" name="Merge Jacoco UT">
										<move file="${plugin.jacoco.ut.destFile}" tofile="${project.build.directory}/jacoco-ut.exec" quiet="true" failonerror="false" />
										<typedef resource="org/jacoco/ant/antlib.xml" />
										<merge destfile="${plugin.jacoco.ut.destFile}">
											<fileset dir="${project.build.directory}">
												<include name="jacoco-ut*.exec" />
											</fileset>
										</merge>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.jacoco</groupId>
								<artifactId>org.jacoco.ant</artifactId>
								<version>${plugin.jacoco}</version>
							</dependency>
							<dependency>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-ant</artifactId>
								<version>2.3.7</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- JDK 7 - relax bytecode verifier to prevent double -->
							<!-- instrumentation issues with OpenJPA tests and JaCoCo -->
							<!-- <argLine>-XX:-UseSplitVerifier ${plugin.jacoco.ut.argLine}</argLine> -->
							<!-- JDK 8 - bytecode verifier cannot be relaxed or disabled -->
							<!-- to prevent runtime errors, OpenJPA tests are ignored -->
							<argLine>${maven.ut.argLine} ${plugin.jacoco.ut.argLine}</argLine>
							<reuseForks>${maven.ut.reuseForks}</reuseForks>
							<includes>
								<include>**/*Test.java</include>
								<include>**/*Tests.java</include>
							</includes>
							<excludes>
								<exclude>**/it/*IT.java</exclude>
							</excludes>
							<properties>
								<!-- add SonarQube's JaCoCo listener to enable -->
								<!-- gathering of code coverage metrics per test -->
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
